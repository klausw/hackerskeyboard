# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1.0.5
      id: setup-ndk
      with:
          ndk-version: r21e
          add-to-path: false
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: gradle wrapper && ./gradlew packageDebugUniversalApk
    - name: Get app version
      run: echo "APP_VERSION=v$(cat ./app/build.gradle | grep -m1 versionName | awk -F \" '{print $2}')" >> $GITHUB_ENV
    - name: Get app name
      run: echo "APP_NAME=HackersKeyboard-DEBUG#${{ github.run_number }}" >> $GITHUB_ENV
    - name: Rename the APK file
      run: mv ./app/build/outputs/universal_apk/debug/app-debug-universal.apk ./${{ env.APP_NAME }}.apk
    - name: Store generated APK file
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.APP_NAME }}
        path: ./${{ env.APP_NAME }}.apk
